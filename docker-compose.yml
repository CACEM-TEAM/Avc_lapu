services:
  frontend:
    build: 
      context: ./frontend
      target: builder
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://svrdocker01:3000
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    command: npm run dev

  backend:
    build: 
      context: ./backend
      target: builder
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=app_user
      - DB_PASS=CacemLapu2025
      - DB_NAME=acv_demande
      - CORS_ORIGIN=http://svrdocker01::5173
    networks:
      - app-network
      - db-network
    depends_on:
      mysql:
        condition: service_healthy
    command: npm run dev

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8090:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=app_user
      - PMA_PASSWORD=CacemLapu2025
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - db-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=acv_demande
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=CacemLapu2025
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

networks:
  db-network:
  app-network:

volumes:
  mysql_data:
    driver: local
